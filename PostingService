<!--　400文字(原稿用紙１枚分)の文字を投稿できるサービスの試作品 -->
<!DOCTYPE html>
<html lang="ja">
<head>
	<meta charset="UTF-8" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<meta name="format-detection" content="telephone=no" />
	<meta name="description" content="ランダムに選ばれた３つのキーワードを使って、好き勝手に400文字をつづるSS投稿サイト掲示板です。">
	<meta name="author" content="SS大好きおじさん">

	<title>SS投稿掲示板(仮)</title>
	<style>
		/* reset */
		html,body {margin: 0; padding: 0; color: #1c1c1c;}
		h1,h2,h3,h4,p,ul,li,div {margin: 0; padding: 0;}
		li {list-style-type: none;}
		input {display: block;}
		input,textarea {font-size: 16px;}

		body {
			position: relative;
		}

		/*　デザイン用スタイル　*/
		.mainArea {
			width: 100%;
		}

		.mainArea h2 {
			margin-top: 24px;
		}

		.elComplementText {
			margin-top: 8px;
			line-height: 1.6;
		}

		.elComplementText a {
			text-decoration: none;
			color: #007ab7;
		}

		.mainArea input[type="text"] {
			width: 100%;
			box-sizing: border-box;
			padding: 8px;
			margin-top: 12px;
			border: 1px solid #C6C6C6;
		}

		.mainArea textarea {
			width: 100%;
			box-sizing: border-box;
			padding: 8px;
			min-height: 100px;
			margin-top: 12px;
			resize: vertical;
			border: 1px solid #C6C6C6;
		}

		.postFormBox {
			max-width: 940px;
			width: 96%;
			margin: 0 auto;
		}

		.postListBox {
			border-top: 1px dashed #3DB680;
			width: 100%;
			margin: 40px auto 0;
		}

		.blcPostData {
			max-width: 940px;
			width: 96%;
			margin: 0 auto;
		}

		.elLimitNotice,
		.elCharacterNotice,
		.elEmptyNotice {
			color: #c7243a;
			margin-top: 12px;
			display: none;
		}

		.blcKeywords {
			max-width: 940px;
			margin-top: 16px;
		}

		.blcKeywords:after {
			content: '';
			clear: both;
			display: block;
			z-index: 1;
		}

		.elKeywordList {
			width: 28%;
			padding: 8px 12px;
			border: 2px dashed rgba(208,66,85,0.2);
			color: #393939;
			float: left;
			font-weight: bold;
			margin-right: 8%;
			box-sizing: border-box;
		}

		.js-key2 {
			margin-right: 0;
		}

		.elOpenButton,
		.elPostButton {
			float: right;
    		background: #1DAF9E;
    		color: #ffffff;
    		border: 0;
    		border-radius: 4px;
    		box-shadow: 0 2px #009F8C;
    		cursor: pointer;
    		padding: 12px 80px;
    		margin-top: 24px;
		}

		.elDeleteButton {
			float: right;
    		background: #555555;
    		color: #ffffff;
    		border: 0;
    		border-radius: 4px;
    		box-shadow: 0 2px #393939;
    		cursor: pointer;
    		padding: 8px 40px;
    		margin-top: 24px;
		}

		.elChoiceButton {
    		background: #d04255;
    		color: #ffffff;
    		border: 0;
    		border-radius: 4px;
    		box-shadow: 0 2px #c7243a;
    		cursor: pointer;
    		padding: 12px 40px;
    		margin: 24px auto;
    		max-width: 420px;
    		text-align: center;
		}

		.blcBaseKeywords li {
			float: left;
			font-weight: bold;
			color: #d04255;
			font-size: 14px;
			margin-right: 20px;
			margin-top: 12px;
		}

		.blcBaseKeywords li:first-child {
			color: #333333;
		}

		.blcPostContents {
			margin-top: 16px;
		}

		.blcBaseKeywords:after,
		.blcText:after,
		.elDeleteButton:after {
			content: '';
			clear: both;
			display: block;
			z-index: 1;
		}

		/* モーダル用デザイン　*/
		.blcCheckModal {
			display: none;
		}

		.blcCheckModal .elBgModal {
			width: 100%;
			height: 100%;
			background: #000000;
			opacity: 0.5;
			top: 0;
			left: 0;
			position: absolute;
			cursor: pointer;
		}

		.blcCheckModal .blcModalInner {
			background: #ffffff;
			width: 90%;
			max-width: 940px;
			position: absolute;
			top: 50%;
			left: 50%;
			padding: 20px;
			box-sizing: border-box;
			border-radius: 4px;
		}

		.blcCheckModal .elCloseButton {
		    height: 30px;
		    width: 30px;
		    background: #393939;
		    color: #ffffff;
		    border-radius: 50%;
		    text-align: center;
		    line-height: 30px;
		    position: absolute;
		    top: 12px;
		    right: 16px;
		    cursor: pointer;
		}

		.blcCheckModal .elInnerStory {
			margin-top: 12px;
			line-height: 1.6;
		}

		.blcCheckModal h2 {
			margin-top: 0;
		}

		/* レスポンシブ用デザイン　*/
		@media(max-width: 767px) {
			.elKeywordList {
				float: none;
				margin: 12px 0 0 0;
				width: 100%;
			}

			.blcCheckModal .elCloseButton {
			    height: 20px;
			    width: 20px;
			    line-height: 20px;
			    top: 8px;
			    right: 8px;
				font-size: 12px;
			}

		}

	</style>

</head>
<body>
	<div class="mainArea">
		<!-- form -->
		<div class="postFormBox">
			<h1>コンテンツタイトル</h1>
			<p class="elComplementText">「キーワードを決める」ボタンを押すと、ランダムに３つのキーワードが選ばれます。<br>
			表示されたキーワードを使って、<a href="https://ja.wikipedia.org/wiki/%E4%B8%89%E9%A1%8C%E5%99%BA">三題噺</a>のように文章を作ってください。<br>
			ボタンを押すと、何度でもキーワードを選びなおすことができます。</p>

			<ul class="blcKeywords">
				<li class="js-key0 elKeywordList"></li>
				<li class="js-key1 elKeywordList"></li>
				<li class="js-key2 elKeywordList"></li>
			</ul>
			<p class="elChoiceButton">キーワードを決める</p>

			<div class="blcPenName">
				<h2>20文字まで</h2>
				<p class="elComplementText">※&nbsp;20文字以内で入力してください。</p>
				<p class="elLimitNotice">20文字以内で入力してください。</p>
				<p class="elCharacterNotice">文章から不正な文字(<や?など)を取り除いてください。</p>
				<p class="elEmptyNotice">必須項目です。入力をお願いします。</p>
				<input type="text" placeholder="ペンネを入れてください(必須)" id="pen">
			</div>
			<div class="blcTitle">
				<h2>30文字まで</h2>
				<p class="elComplementText">※&nbsp;30文字以内で入力してください。</p>
				<p class="elLimitNotice">30文字以内で入力してください。</p>
				<p class="elCharacterNotice">文章から不正な文字(<や()など)を取り除いてください。</p>
				<p class="elEmptyNotice">必須項目です。入力をお願いします。</p>
				<input type="text" placeholder="タイトルを入力してください（必須）" id="title">
			</div>
			<div class="blcText">
				<h2>400文字まで</h2>
				<p class="elComplementText">※&nbsp;400文字以内で入力してください。</p>
				<p class="elLimitNotice">400文字以内で入力してください。</p>
				<p class="elCharacterNotice">文章から不正な文字(<や?など)を取り除いてください。</p>
				<p class="elEmptyNotice">必須項目です。入力をお願いします。</p>
				<textarea placeholder="内容を入力してください（必須）" class="js-story"></textarea>
				<input type="button" name="delete" class="elOpenButton" value="確認する">
			</div>
		</div>

		<!-- リスト　-->
		<div class="postListBox">

			<!-- コンテンツブロック　-->
			<div class="blcPostData">
				<h2>タイトル（30文字以内）</h2>
				<ul class="blcBaseKeywords">
					<li>キーワード：</li>
					<li>キーワード1</li>
					<li>キーワード2</li>
					<li>キーワード3</li>
				</ul>
				<div class="blcPostContents">内容(400文字以内)</div>
			</div>


		</div>


		<!-- モーダル(投稿確認前モーダル) -->
		<div class="blcCheckModal js-Check">
			<div class="elBgModal"></div>
			<div class="blcModalInner">
				<h2>タイトル（30文字以内）</h2>
				<p class="elInnerStory">ストーリー(400文字以内)</p>
				<input type="button" name="post" class="elPostButton" value="投稿する">
				<p class="elCloseButton">&#x3A7;</p>
			</div>
		</div>

	</div>

</body>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha256-k2WSCIexGzOj3Euiig+TlR8gA0EmPjuc79OEeY5L45g=" crossorigin="anonymous"></script>
<script type="text/javascript">

	/* 重複なしで抽出し、キーワードリストに反映　*/
	var keywordsRoot = $('.blcKeywords');

	function random(num) {
	  var a = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J"];
	  var t = [];
	  var r = [];
	  var l = a.length;
	  var n = num < l ? num : l;
	  while (n-- > 0) {
	    var i = Math.random() * l | 0;
	    r[n] = t[i] || a[i];
	    --l;
	    t[i] = t[l] || a[l];
	  }
	  return r;
	}

	$('.elChoiceButton').click(function(){
		result = random(3);
		for (var i = 0; i < result.length; i++) {
			keywordsRoot.find('.js-key'+i).text(result[i]);
		}
	});



	/* テキストエリアの高さ調整 */
	var textBox = $('.js-story');

	textBox.keydown(function(){
		var textBoxHeight = textBox.scrollTop() + textBox.innerHeight();
		textBox.css('height',textBoxHeight);
		if (textBox.val().length > 400) {
			textBox.parent().find('.elLimitNotice').show();
		} else {
			textBox.parent().find('.elLimitNotice').hide();
		}
	});

	/* 特殊文字チェック */
	function CharacterError() {
		$(':text,textarea').keypress(function(){
			if($(':text,textarea').val().match(/[<(.*)>.*<\/\1>]/)){
				$(this).parent().children('.elCharacterNotice').show();
			} else {
				$(this).parent().children('.elCharacterNotice').hide();
			}
		});
	}

	/* 特殊文字バリデートは常に実行　*/
	CharacterError();

	/* チェック用フラグ　*/
	var flag = false;

	/* バリデート機能とりまとめ　*/
	function validate(name) {
		var nearlyEmpty = name.parent().find('.elEmptyNotice'),
			limitNotice = name.parent().find('.elLimitNotice'),
			codeNotice = name.parent().children('.elCharacterNotice'),
			limit,
			/* 文字数制限取得　*/
			code = name.attr('id'),
			code2 = name.attr('class');

		if (code == "pen") {
			limit = 20;
		} else if (code == "title") {
			limit = 40;
		} else if (code2 == "js-story") {
			limit = 400;
		}

		/* 個別バリデート　*/
		if (name.val() == '') {
			nearlyEmpty.show();
			limitNotice.hide();
			codeNotice.hide();
			name.css('background','#F4D2DE');
			flag = false;
		} else if (name.val().length > limit) {
			nearlyEmpty.hide();
			limitNotice.show();
			codeNotice.hide();
			name.css('background','#F4D2DE');
			flag = false;
		} else if (name.val().match(/[<.*>.*<\/\1>]/)) {
			nearlyEmpty.hide();
			limitNotice.hide();
			codeNotice.show();
			name.css('background','#F4D2DE');
			flag = false;
		} else {
			nearlyEmpty.hide();
			limitNotice.hide();
			codeNotice.hide();
			name.css('background','#ffffff');
			flag = true;
		}
	}


	/* 個別フォーカス制御 */
	$('#pen').blur(function(){
		validate($(this));
	});

	$('#title').blur(function(){
		validate($(this));
	});

	textBox.blur(function(){
		validate($(this));
	});

	/* モーダル位置調整 */
	var modalRoot = $('.blcCheckModal'),
		modalBg = modalRoot.find('.elBgModal'),
		modalClose = modalRoot.find('.elCloseButton')
		modalInner = modalRoot.find('.blcModalInner');

	/* OKだったら、送信 */
	$('.elOpenButton').click(function(){
		$(':text,textarea').each(function(){
			validate($(this));
		});

		if (flag==true) {
			modalRoot.show();
			modalInner.css({
				marginTop: '-' + (modalInner.height() / 2 + 20) + 'px',
				marginLeft: '-' + (modalInner.width() / 2 + 20) + 'px'
			});
		}
	});

	/*　モーダルの非表示 */
	modalBg.click(function(){
		modalRoot.hide();
	});

	modalClose.click(function(){
		modalRoot.hide();
	});


</script>


</html>
